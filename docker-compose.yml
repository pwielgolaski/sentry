redis:
    image: redis

db:
    image: postgres
    ports:
      - "5432:5432"

sentrycelery: &DEFAULT
  image: slafs/sentry
  command: "celery worker -B -l INFO"
  links:
    - redis:redis
    - db:postgresdb
  volumes:
     - ./conf:/config
  environment:
    SECRET_KEY: '123123123'
    SENTRY_URL_PREFIX: 'http://dockerhost'
#    SENTRY_SINGLE_ORGANIZATION: 'True'
    SENTRY_BEACON: 'False'
    SENTRY_INITIAL_TEAM: 'testteam'
    SENTRY_INITIAL_PROJECT: 'testproject'
    SENTRY_INITIAL_KEY: 'pub:sec'
    SENTRY_INITIAL_PLATFORM: 'java_logback'
    SENTRY_DOCKER_DO_DB_CHECK: 'yes'
    CELERY_ALWAYS_EAGER: 'False'
    CACHE_URL: 'hiredis://redis:6379/2'
    DATABASE_URL: 'postgres://postgres:@postgresdb/postgres'
    C_FORCE_ROOT: 'true'
    SENTRY_PUBLIC: 'True'
    SENTRY_USE_REMOTE_USER: 'True'
    AUTH_REMOTE_USER_HEADER: 'HTTP_X_SSO_USERNAME'
    PYTHONPATH: '/conf/'
    SENTRY_CONF_FILE: '/config/sentry_customconf.py'

sentryweb:
  <<: *DEFAULT  # "inherit" from the configuration above
  command: "start"
  expose:
   - "9000"
  ports:
    - "9000:9000"

nginx:
  build: .
  ports:
    - "80:80"
  links:
    - sentryweb:sentryweb
